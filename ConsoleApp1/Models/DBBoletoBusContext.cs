// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ConsoleApp1.Models;

public partial class DBBoletoBusContext : DbContext
{
    public DBBoletoBusContext(DbContextOptions<DBBoletoBusContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Asiento> Asientos { get; set; }

    public virtual DbSet<Bus> Buses { get; set; }

    public virtual DbSet<Conductor> Conductors { get; set; }

    public virtual DbSet<ConductorBu> ConductorBus { get; set; }

    public virtual DbSet<Reserva> Reservas { get; set; }

    public virtual DbSet<ReservaDetalle> ReservaDetalles { get; set; }

    public virtual DbSet<Rutum> Ruta { get; set; }

    public virtual DbSet<Status> Statuses { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<Viaje> Viajes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Asiento>(entity =>
        {
            entity.HasKey(e => e.IdAsiento).HasName("PK__Asiento__F5678721D7FDE0D2");

            entity.ToTable("Asiento");

            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdBusNavigation).WithMany(p => p.Asientos)
                .HasForeignKey(d => d.IdBus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Asiento__IdBus__3A81B327");
        });

        modelBuilder.Entity<Bus>(entity =>
        {
            entity.HasKey(e => e.IdBus).HasName("PK__Bus__0EE90C05CE6F933F");

            entity.ToTable("Bus");

            entity.HasIndex(e => new { e.IdBus, e.Estatus }, "IDX_BUSID_ESTATUS").HasFilter("([Estatus]=(1))");

            entity.Property(e => e.CapacidadTotal).HasComputedColumnSql("([CapacidadPiso1]+[CapacidadPiso2])", false);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroPlaca)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Conductor>(entity =>
        {
            entity.HasKey(e => e.ConductorId).HasName("PK__Conducto__BDDAB6E044A843F5");

            entity.ToTable("Conductor");

            entity.Property(e => e.ConductorId)
                .ValueGeneratedNever()
                .HasColumnName("ConductorID");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.NumeroLicencia)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.ConductorNavigation).WithOne(p => p.Conductor)
                .HasForeignKey<Conductor>(d => d.ConductorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Conductor_Usuario");
        });

        modelBuilder.Entity<ConductorBu>(entity =>
        {
            entity.HasKey(e => e.ConductorBusId).HasName("PK__Conducto__9881E4FF3473396A");

            entity.Property(e => e.ConductorBusId).HasColumnName("ConductorBusID");
            entity.Property(e => e.ConductorId).HasColumnName("ConductorID");

            entity.HasOne(d => d.Bus).WithMany(p => p.ConductorBus)
                .HasForeignKey(d => d.BusId)
                .HasConstraintName("FK__Conductor__BusId__2CF2ADDF");

            entity.HasOne(d => d.Conductor).WithMany(p => p.ConductorBus)
                .HasForeignKey(d => d.ConductorId)
                .HasConstraintName("FK__Conductor__Condu__2BFE89A6");
        });

        modelBuilder.Entity<Reserva>(entity =>
        {
            entity.HasKey(e => e.IdReserva).HasName("PK__Reserva__0E49C69D2C5DF9DF");

            entity.ToTable("Reserva");

            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.MontoTotal).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.IdViajeNavigation).WithMany(p => p.Reservas)
                .HasForeignKey(d => d.IdViaje)
                .HasConstraintName("FK__Reserva__IdViaje__45F365D3");
        });

        modelBuilder.Entity<ReservaDetalle>(entity =>
        {
            entity.HasKey(e => e.IdReservaDetalle).HasName("PK__ReservaD__73F1E94273858EE5");

            entity.ToTable("ReservaDetalle");

            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdReservaNavigation).WithMany(p => p.ReservaDetalles)
                .HasForeignKey(d => d.IdReserva)
                .HasConstraintName("FK__ReservaDe__IdRes__49C3F6B7");
        });

        modelBuilder.Entity<Rutum>(entity =>
        {
            entity.HasKey(e => e.IdRuta).HasName("PK__Ruta__887538FE6A13F5AC");

            entity.Property(e => e.Destino)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Estatus).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Origen)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Status>(entity =>
        {
            entity.ToTable("Status");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuario__5B65BF979823534C");

            entity.ToTable("Usuario");

            entity.Property(e => e.Apellidos)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Clave)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Estatus).HasDefaultValue(true);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Nombres)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TipoUsuario)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Viaje>(entity =>
        {
            entity.HasKey(e => e.IdViaje).HasName("PK__Viaje__580AB6B909A2717A");

            entity.ToTable("Viaje");

            entity.Property(e => e.AsientoDisponibles).HasComputedColumnSql("([TotalAsientos]-[AsientosReservados])", false);
            entity.Property(e => e.Completo).HasComputedColumnSql("(case when ([TotalAsientos]-[AsientosReservados])<(1) then (1) else (0) end)", false);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Precio).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.IdBusNavigation).WithMany(p => p.Viajes)
                .HasForeignKey(d => d.IdBus)
                .HasConstraintName("FK__Viaje__IdBus__412EB0B6");

            entity.HasOne(d => d.IdRutaNavigation).WithMany(p => p.Viajes)
                .HasForeignKey(d => d.IdRuta)
                .HasConstraintName("FK__Viaje__IdRuta__4222D4EF");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}